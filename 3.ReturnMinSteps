#question 3
def minDistance(word1, word2):
    m, n = len(word1), len(word2)

    # Create a 2D table to store the minimum number of steps
    dp = [[0] * (n + 1) for _ in range(m + 1)]

    # Fill the first row and first column of the table
    for i in range(1, m + 1):
        dp[i][0] = i
    for j in range(1, n + 1):
        dp[0][j] = j

    # Fill the rest of the table
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if word1[i-1] == word2[j-1]:
                dp[i][j] = dp[i-1][j-1]
            else:
                dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + 1

    return dp[m][n]

# Example usage:
word1 = "sea"
word2 = "eat"
output = minDistance(word1, word2)
print(output)

#TC - O(m*n)
#SC - O(m*n)
